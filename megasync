#!/usr/bin/env bash
# shellcheck disable=SC2120,SC2119

ROOT="$HOME/.local/share/megasync"

if ! test -d "$ROOT"; then
  mkdir -p "$ROOT"
fi

# Commandline arguments
REMOTE_NAME="$1"
TEST_CHECKSUM_DIR="$2"
REMOTE_DIRECTORY="$3"

HASH_FILE_NAME=$(basename "$TEST_CHECKSUM_DIR")
HASH_FILE_PATH="$ROOT/$HASH_FILE_NAME"

# Program
HASH_CHECKER=checksumdir
HASH_CHECKER_URL=https://pypi.org/project/checksumdir/


# Usage help text
USAGE=$(cat <<-END

Usage: megasync <REMOTE_NAME> <LOCAL_DIRECTORY> <REMOTE_DIRECTORY>

REMOTE_NAME: Name of the configured remote.
LOCAL_DIRECTORY: The directory to verify against the MD5 hash.
REMOTE_DIRECTORY: The designated folder name within your MEGA account.
END
)

exit_success()
{
  if test -n "$1"; then
    echo "$1"
  fi

  exit 0
}

exit_failure()
{
  if test -n "$1"; then
    echo "$1"
  fi

  exit 1
}

exists()
{
  if command -v "$1" &> /dev/null; then
    return 0
  else
    return 1
  fi
}

exists "$HASH_CHECKER" || exit_failure "Missing $HASH_CHECKER. Install: $HASH_CHECKER_URL"
exists rclone || exit_failure "Install rclone and configure at least one remote location."

if test -z "$TEST_CHECKSUM_DIR"; then
  exit_failure "$USAGE"
fi

if ! test -d "$TEST_CHECKSUM_DIR"; then
  exit_failure "The directory to verify against the MD5 hash does not exist."
fi

if test -z "$REMOTE_DIRECTORY"; then
  exit_failure "$USAGE"
fi

if test -z "$REMOTE_NAME"; then
  exit_failure "$USAGE"
fi

write_hash_to_file()
{
  local hash="$1"
  local file="$2"
  echo "$hash" > "$file"
}

hash_dir()
{
  "$HASH_CHECKER" "$TEST_CHECKSUM_DIR"
}

if ! test -f "$HASH_FILE_PATH"; then
  touch "$HASH_FILE_PATH"
fi

hashed_dir=$(hash_dir)
old_hash=$(cat "$HASH_FILE_PATH")

if [[ "$hashed_dir" == "$old_hash" ]]; then
  # Since hash did not change that means files in the TEST_CHECKSUM_DIR directory did not change so exiting here, no need to sync
  exit_success
fi

write_hash_to_file "$hashed_dir" "$HASH_FILE_PATH"

rclone sync "$TEST_CHECKSUM_DIR" "$REMOTE_NAME:$REMOTE_DIRECTORY" || exit_failure "Failed syncing to remote: $REMOTE_NAME"

exit_success
